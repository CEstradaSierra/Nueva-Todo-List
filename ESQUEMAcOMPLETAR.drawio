<mxfile host="Electron" modified="2023-06-11T22:13:24.958Z" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/21.3.7 Chrome/112.0.5615.204 Electron/24.5.0 Safari/537.36" etag="PxXRz6XLsq8XDvl3B0Z0" version="21.3.7" type="device">
  <diagram name="PÃ¡gina-1" id="5jgCKm69iCYjD3TTl4Ua">
    <mxGraphModel dx="1605" dy="1701" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="GFIEYMgBZcu4WTuVS4hW-6" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="GFIEYMgBZcu4WTuVS4hW-1" target="GFIEYMgBZcu4WTuVS4hW-2">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GFIEYMgBZcu4WTuVS4hW-7" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="GFIEYMgBZcu4WTuVS4hW-1" target="GFIEYMgBZcu4WTuVS4hW-3">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GFIEYMgBZcu4WTuVS4hW-1" value="App.jsx" style="whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="120" y="70" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="GFIEYMgBZcu4WTuVS4hW-2" value="Header.jsx" style="whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="-10" y="200" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="GFIEYMgBZcu4WTuVS4hW-8" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.75;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="GFIEYMgBZcu4WTuVS4hW-3" target="GFIEYMgBZcu4WTuVS4hW-4">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GFIEYMgBZcu4WTuVS4hW-9" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="GFIEYMgBZcu4WTuVS4hW-3" target="GFIEYMgBZcu4WTuVS4hW-5">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="GFIEYMgBZcu4WTuVS4hW-3" value="TaskList.jsx&lt;br&gt;" style="whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="230" y="210" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="GFIEYMgBZcu4WTuVS4hW-4" value="Task.jsx&lt;br&gt;" style="whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="170" y="310" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="GFIEYMgBZcu4WTuVS4hW-5" value="TaskCard" style="whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="320" y="310" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="GFIEYMgBZcu4WTuVS4hW-10" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;TaskCard:&lt;br&gt;/*debo usar useState para caputrar el valor*/&lt;br&gt;import {useState} from &#39;react&#39;&lt;br&gt;export const TaskCard=({handleCreateTask&lt;br&gt;&amp;nbsp;})=&amp;gt;{&lt;br&gt;const[newTask,setCreateNewTask]=useState(&#39; &#39;)&lt;br&gt;const handleSubmit=(taskName)=&amp;gt;{&lt;br&gt;taskName.prebentDefault()&lt;br&gt;handleCreateTask&lt;br&gt;setCreateNewTask(&#39; &#39;)&lt;br&gt;}&lt;br&gt;const&amp;nbsp;&lt;br&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;return(&lt;br&gt;&amp;lt;form onSubmit={}&amp;gt;&lt;br&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&amp;lt;input &lt;br&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;type=&quot;checbox&quot;&lt;br&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;placeHolder=&quot;Add your new Todo&quot;&lt;br&gt;value={newTask}&lt;br&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;onChange={(event)=&amp;gt;&lt;br&gt;setCreateNewTask(event.target.value)&lt;br&gt;&amp;lt;/form&amp;gt;&lt;br&gt;}&lt;br&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;/&amp;gt;&lt;br&gt;&amp;lt;button&amp;gt;+&amp;lt;/button&amp;gt;&lt;br&gt;&lt;span style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;)&lt;br&gt;}&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="430" y="-350" width="490" height="600" as="geometry" />
        </mxCell>
        <mxCell id="GFIEYMgBZcu4WTuVS4hW-12" value="TaskList:&lt;br&gt;import {TaskCard} from &#39;./TaskCard&lt;br&gt;import {useState,useEffect} from &#39;react&#39;&lt;br&gt;&lt;br&gt;const[newValue,setNewValue]=useState(&#39; &#39;)&lt;br&gt;&lt;br&gt;const handleNewValue=(event)=&amp;gt;{&lt;br&gt;setNewValue(event.target.value)&lt;br&gt;}&lt;br&gt;const CreateTask=({tasks})=&amp;gt;{&lt;br&gt;&lt;br&gt;}" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="950" y="-242" width="260" height="190" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
